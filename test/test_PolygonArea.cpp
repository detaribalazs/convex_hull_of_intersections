#include <PolygonArea.h>

#include "unit_test.h"

using namespace gk;

// =================================================================================================
TEST_CASE(area_degenerate)
{
    CHECK_EQ(area({{5,6}, {2,5}}), 0.0);
    CHECK_EQ(area({{2,5}}), 0.0);
    CHECK_EQ(area({}), 0.0);
}

// =================================================================================================
TEST_CASE(area_triangle)
{
    CHECK_EQ(area({{0,0}, {5,0}, {0,5}}), 12.5);
    CHECK_EQ(area({{0,0}, {-4,0}, {0,-4}}), 8);
    CHECK_EQ(area({{0,1}, {1,1}, {0,0}}), 0.5);
    CHECK_EQ(area({{0,1}, {1,1}, {0.5,0}}), 0.5);
}

// =================================================================================================
TEST_CASE(area_rectangle)
{
    CHECK_EQ(area({{0,0}, { 5,0}, { 5, 5}, { 0, 5}}), 25.0);
    CHECK_EQ(area({{0,0}, {-4,0}, {-4,-4}, { 0,-4}}), 16.0);
    CHECK_EQ(area({{0,1}, {1,1},  { 0, 0}, {-1, 0}}),  1.0);
    CHECK_EQ(area({{0,1}, {1,1},  { 0,-1}, {-1,-1}}),  2.0);
}

// =================================================================================================
IGNORE_TEST_CASE(area_example)
{
    std::vector<Point> points{
        {-3.9105,  3.1158},
        {-2.6519, -2.1298},
        {-2.0311,  6.8670},
        { 1.3720, -4.8081},
        { 3.0000,  9.0000},
        { 6.6981,  7.9434},
        { 7.4496, -3.4038},
        { 9.3064,  5.0380},
        {10.0000,  2.0000}
    };

    CHECK_EQ(area(points), 140.0776);
}
